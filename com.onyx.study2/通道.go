package main

import "fmt"

func main() {

	/**
		我们想要初始化一个长度为5且元素类型为int的通道值，则需要这样写：

	make(chan int, 5)
	    顺便说一句，实际上make函数也可以被用来初始化切片类型或字典类型的值。

		通道值的长度应该被称为其缓存的尺寸。换句话说，它代表着通道值中可以暂存的数据的个数。
		注意，暂存在通道值中的数据是先进先出的，即：越早被放入（或称发送）到通道值的数据会越先被取出
		（或称接收）。
	*/

	ch1 := make(chan int, 5)

	//使用接收操作符<-向通道值发送数据了
	ch1 <- 5

	//想从ch1那里接收字符串
	value := <-ch1
	fmt.Println(value)

	//说到关闭通道值，我们可以通过调用内建函数close来达到目的
	close(ch1)

	/**
		请注意，对通道值的重复关闭会引发运行时恐慌。这会使程序崩溃。所以一定要避免这种情况的发生。
		另外，在通道值有效的前提下，针对它的发送操作会在通道值已满（其中缓存的数据的个数已等于它的长度）
		时被阻塞。而向一个已被关闭的通道值发送数据会引发运行时恐慌。另一方面，
		针对有效通道值的接收操作会在它已空（其中没有缓存任何数据）时被阻塞。除此之外，
		还有几条与通道的发送和接收操作有关的规则。不过在这里我们记住上面这三条就可以了。

	  最后，与切片和字典类型相同，通道类型属于引用类型。它的零值即为nil。
	*/

}
